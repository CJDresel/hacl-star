[
  "É¬÷\u0007\u0006º&Ñ&ÀaÍ\u0004¥\u0006,",
  [
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_aesni_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "b634db727aab99f73aa9f0b58bc65b38"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_aesni_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "bac6b6fcf26f5a8a4d97786200d136a7"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_aesni_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_and-interp",
        "l_imp-interp", "l_not-interp",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "4bd0cd1de15f59f35fde875ab940b94a"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_aesni_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_aesni_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "21376da537e5bd3df6c9c98d81ff3cb1"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_aesni_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "2c495a7251ee50143cd66e2202073d0f"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_sha_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "64011bd8dc9df6d8db4ed6d1fdeb6901"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_sha_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "0189fd390fbbd06053b2ce9918de9a0d"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_sha_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "44ee3d6a0beb790c5239b14034851f54"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_sha_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_sha_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "3da78e98e3874cc00702dacc93111edc"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_sha_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "de4e023502622db4857e36c6444e5a42"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_adx_bmi2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "986bf5bbe2f30fe7e64f2758b8eae755"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_adx_bmi2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "9538f16dd64c872a5052ccf76483f6e7"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_adx_bmi2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_and-interp",
        "l_imp-interp", "l_not-interp",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "3d98e53ac2f2e7b0bcbcd7fb78db0cad"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_adx_bmi2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_adx_bmi2_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "75690418f3177525eb0fe0cbfa70bc0d"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_adx_bmi2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "6dbc0b14ae97714dacb8402544988207"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_avx_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "cafb036349a355c88c3a7dc11c877edd"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_avx_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "bf8e389f7ad3c9f3d146910ee02e8c29"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_avx_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "0479970022288d3b0e8184722fe1d6a5"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_avx_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_avx_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "1787bf10cf4344bf820f9e3c96eafd58"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_avx_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "7b14e9dbf72ff7ec0395b55af1a307fd"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_avx2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "8b0e9319b61524f138fa6323aee67478"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_avx2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "41905bdf574738d1f443c515f8d0e660"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_avx2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "b303b7fb0c10653de10f8a72fe9db22b"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_avx2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_avx2_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "e7b91829308028bdf9f941bc8b4ea9ae"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_avx2_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "77c3cef21207a6328486af5fc2eab0ad"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_movbe_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "19ec19d1461ec76534753d43e1e62621"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_movbe_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "9abb5854d9ee6aa49b5152704f67de8a"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_movbe_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "c0e8dae07d8c6367c303cd69e2c8f443"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_movbe_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_movbe_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "f209e4d081d2b40620d9a83a35b60c25"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_movbe_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "a35ac64ca6387d938faac8be7e0ac0c7"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_sse_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "3ec1b76ee5f86ab911cdcf4838b60d61"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_sse_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "0bab9f252885371ce45f66994f8655e7"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_sse_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "89bb89e44a6980fbcd75909895eed563"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_sse_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_sse_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "dd8fd6d0762fcad9001d07f33b807cb0"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_sse_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "f0f290089f2efccfb71e453257ce82c4"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_rdrand_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_require_total",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "fea9aef07da03cc48d23fb25d2cae7ee"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_rdrand_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "2499db649ef02bff9e85b46f02d28ca0"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_rdrand_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "unit_typing"
      ],
      0,
      "99b4baf621c0634c6b320641e11e6a9a"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_rdrand_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_rdrand_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg", "unit_typing"
      ],
      0,
      "5ac2531c6ebd895b0af2cdf3f69503ac"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_rdrand_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "5bdcb1b033e3de42fb2909d38843086b"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_avx512_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "49ea995ef4b657ee5d7d2f6d4c8cdebc"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_avx512_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "ea50e6380fa4ae472bc89aff30fa0892"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_avx512_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs"
      ],
      0,
      "a10b2e785f1e9d5542d5a79e24a55d00"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_avx512_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_avx512_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg"
      ],
      0,
      "1b7e62becedf68c44c78b409a5d5d857"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_avx512_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "ad411e5f87d903da6d2eba723de0346a"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_osxsave_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "d294d9b1d796eb0ee18aa73614172f6b"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_osxsave_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "6d9758f6b70dc17fe68958cd7c5ab471"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_osxsave_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.eq2",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs"
      ],
      0,
      "3bab12aa9d946381068e97e5094a4f0c"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_osxsave_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_osxsave_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg"
      ],
      0,
      "eea09c1c7d52477b1351215e4a22b220"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_osxsave_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "824af992e334584aa81ef1b849c0d47d"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_avx_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "8bd6473272af711593ac529408cfe0a0"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_avx_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "a478e7359d81ece89332f04cf5b8beb3"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_avx_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.l_imp",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs"
      ],
      0,
      "b116e67d6f24815946f03a047a59965c"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_avx_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_avx_xcr0_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.Regs.upd",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg"
      ],
      0,
      "ce727123e3eb0399a57620a65d49c04e"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_avx_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "651a145230bb378ac3414379ecab02c4"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_req_Check_avx512_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "75cd1d6660f212dc01eaa1ac3f9b662f"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_ens_Check_avx512_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.X64.Decls.va_state_eq",
        "l_quant_interp_5b2993f9f2c0eba3627049a3b4167c7a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "53d534aa9720532716f0d60ad91edddd"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_lemma_Check_avx512_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "eq2-interp", "equation_Prims.l_imp",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.X64.CPU_Features_s.avx_xcr0",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "l_imp-interp",
        "l_not-interp", "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.X64.Flags.lemma_equal_intro",
        "lemma_Vale.X64.QuickCodes.lemma_label_bool",
        "lemma_Vale.X64.Regs.lemma_equal_intro",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.CPU_Features_s.avx_xcr0",
        "typing_Vale.X64.QuickCodes.label",
        "typing_Vale.X64.QuickCodes.va_range1",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs"
      ],
      0,
      "a48548ee2ada8108835539ee9be0147f"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_wpProof_Check_avx512_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "data_typing_intro_Vale.X64.Machine_s.Reg@tok", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.X64.Cpuidstdcall.va_wp_Check_avx512_xcr0_stdcall",
        "equation_Vale.X64.Decls.upd_register",
        "equation_Vale.X64.Decls.va_ensure_total",
        "equation_Vale.X64.Decls.va_require_total",
        "equation_Vale.X64.Decls.va_state_eq",
        "equation_Vale.X64.Decls.va_upd_flags",
        "equation_Vale.X64.Decls.va_upd_ok",
        "equation_Vale.X64.Decls.va_upd_reg64",
        "equation_Vale.X64.Machine_s.n_reg_files",
        "equation_Vale.X64.Machine_s.n_regs",
        "equation_Vale.X64.Machine_s.reg_64",
        "equation_Vale.X64.Machine_s.reg_file_id",
        "equation_Vale.X64.Machine_s.reg_id",
        "equation_Vale.X64.Machine_s.t_reg",
        "equation_Vale.X64.Machine_s.t_reg_file",
        "equation_Vale.X64.Memory.vale_full_heap_equal",
        "equation_Vale.X64.QuickCode.t_require",
        "equation_Vale.X64.QuickCode.va_t_ensure",
        "equation_Vale.X64.State.state_eq",
        "equation_Vale.X64.State.update_reg",
        "equation_Vale.X64.State.update_reg_64",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.X64.State.vale_state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap", "int_typing",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.X64.Regs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.X64.Machine_s.Reg_rf",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_flags",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_heap",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_ok",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_regs",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stack",
        "proj_equation_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.X64.Machine_s.Reg_rf",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_flags",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_heap",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_ok",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_regs",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stack",
        "projection_inverse_Vale.X64.State.Mkvale_state_vs_stackTaint",
        "refinement_interpretation_Tm_refine_0559236e7a05befcc7b6302f3642ad81",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d9979b96a3f2b18961b3dd63a2783b64",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.X64.Decls.va_upd_flags",
        "typing_Vale.X64.Decls.va_upd_ok",
        "typing_Vale.X64.Decls.va_upd_reg64", "typing_Vale.X64.Regs.sel",
        "typing_Vale.X64.Regs.upd",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_flags",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_heap",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_ok",
        "typing_Vale.X64.State.__proj__Mkvale_state__item__vs_regs",
        "typing_Vale.X64.State.update_reg"
      ],
      0,
      "9f52f251081cfae4c8bf05384e310a33"
    ],
    [
      "Vale.Lib.X64.Cpuidstdcall.va_quick_Check_avx512_xcr0_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "31fca1e894c544012c917c977544863b"
    ]
  ]
]